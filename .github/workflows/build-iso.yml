name: Build Rocky ISO with Kickstart

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-iso:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Install dependencies
      - name: Install Dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update -y --fix-missing
          sudo apt-get install -y --no-install-recommends genisoimage xorriso curl p7zip-full

      # Step 3: Download Rocky Linux ISO
      - name: Download Rocky ISO
        run: |
          curl -L -o rocky.iso https://download.rockylinux.org/pub/rocky/9/isos/x86_64/Rocky-9-latest-x86_64-minimal.iso

      # Step 4: Extract ISO contents
      - name: Extract ISO
        run: |
          mkdir -p iso_contents
          7z x rocky.iso -o./iso_contents || echo "Extraction failed"

      # Step 5: Debug - Verify kernel and initrd files
      - name: Verify Kernel and Initrd
        run: |
          ls -l iso_contents/isolinux/vmlinuz
          ls -l iso_contents/isolinux/initrd.img
          file iso_contents/isolinux/vmlinuz
          file iso_contents/isolinux/initrd.img

      # Step 6: Add boot.msg (skip Kickstart for now)
      - name: Add Custom Files
        run: |
          cp boot.msg iso_contents/isolinux/boot.msg

      # Step 7: Modify isolinux.cfg (no countdown, minimal parameters)
      - name: Update isolinux.cfg
        run: |
          # Set no countdown
          sed -i 's/TIMEOUT [0-9]*/TIMEOUT 0/' iso_contents/isolinux/isolinux.cfg
          # Update DISPLAY to use boot.msg
          sed -i '/DISPLAY/d' iso_contents/isolinux/isolinux.cfg
          echo "DISPLAY boot.msg" >> iso_contents/isolinux/isolinux.cfg
          # Fix kernel and initrd paths
          sed -i 's|kernel vmlinuz|kernel /isolinux/vmlinuz|' iso_contents/isolinux/isolinux.cfg
          sed -i 's|initrd=initrd.img|initrd=/isolinux/initrd.img|' iso_contents/isolinux/isolinux.cfg
          # Simplify kernel command line (remove inst.* parameters for now)
          sed -i 's|inst.stage2=cdrom:/images/install.img||' iso_contents/isolinux/isolinux.cfg
          sed -i 's|inst.text||' iso_contents/isolinux/isolinux.cfg
          sed -i 's|inst.debug||' iso_contents/isolinux/isolinux.cfg
          sed -i 's|quiet||' iso_contents/isolinux/isolinux.cfg

      # Step 8: Rebuild the ISO
      - name: Build Custom ISO
        run: |
          xorriso -as mkisofs \
            -o custom-rocky.iso \
            -b isolinux/isolinux.bin \
            -c isolinux/boot.cat \
            -no-emul-boot \
            -boot-load-size 4 \
            -boot-info-table \
            -eltorito-alt-boot \
            -e images/efiboot.img \
            -no-emul-boot \
            -V "Custom_Rocky_9.3" \
            -r -J -joliet-long \
            iso_contents/

      # Step 9: Upload the ISO as an artifact
      - name: Upload ISO Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PortalRobotics_04072025-iso
          path: custom-rocky.iso
